#ifndef DAY17_H
#define DAY17_H

#include <iostream>
#include <numeric>
#include <vector>
#include <algorithm>
#include <map>
#include <filesystem>
#include <chrono>
#include <cmath>
#include <set>
#include <optional>

#include "../../aoc_tools/src/aoc_tools.h"

void part_one(const std::vector<std::string>& input_data);
void part_two(const std::vector<std::string>& input_data);

std::string get_instructions(const std::vector<std::string>& input_data);
std::vector<long long> get_register_values(const std::vector<std::string>& input_data);

std::vector<int> instruction_string_to_int_vector(std::string& input_string);
long long opcode_0_adv(long long& a_value, long long& combo_operand);
long long opcode_1_bxl(long long& b_value, int& literal_operand);
long long opcode_2_bst(long long& combo_operand);
bool opcode_3_jnz(long long& a_value);
long long opcode_4_bxc(long long& b_value, long long& c_value, int& literal_operand);
long long opcode_5_out(long long& combo_operand);
long long opcode_6_bdv(long long& a_value, long long& combo_operand);
long long opcode_7_cdv(long long& a_value, long long& combo_operand);

// Input: Program 3-bit instructions (example: {0,1,5,4,3,0}) and the initial values of Registers A, B, and C.
// Output: Concatinated std::string containing the sequence of integers generated by optcode_5_out().
std::string compute(const std::vector<int>& instructions, long long a_value, long long b_value, long long c_value);
long long get_best_quine_input(const std::vector<int>& instructions, int cursor, long long sofar);

#endif 
